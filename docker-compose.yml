services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - static_data:/app/static
    command: gunicorn config.asgi:application --config /gunicorn.conf.py

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - django
    volumes:
      - static_data:/static:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD-SHELL", "nginx -T >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  pg_data:
  static_data:
